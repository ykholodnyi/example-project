version: '3'

services:
  app1:
    build:
      context: .
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload", "--workers", "4"]
    container_name: app1-example-project
    depends_on:
      - postgres
    env_file:
      - .env
    ports:
      - 8000:8000
    volumes:
        - ./:/app:rw

  app2:
    build:
      context: .
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8001", "--reload", "--workers", "4"]
    container_name: app2-example-project
    depends_on:
      - postgres
    env_file:
      - .env
    ports:
      - 8001:8001
    volumes:
        - ./:/app:rw

  app3:
    build:
      context: .
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8002", "--reload", "--workers", "4"]
    container_name: app3-example-project3
    depends_on:
      - postgres
    env_file:
      - .env
    ports:
      - 8002:8002
    volumes:
        - ./:/app:rw

  postgres:
    container_name: postgres-example-project
    environment:
      - POSTGRES_USER=${POSTGRESQL_USER}
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRES_DB=${POSTGRESQL_DATABASE}
    # https://github.com/docker-library/postgres/blob/a7aa19b8501df4c459dad78fd18e2b36fded9643/13/alpine/Dockerfile
    image: postgres:13-alpine
    ports:
      - 5432:5432
    # volume to persist database data per runs
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data:rw